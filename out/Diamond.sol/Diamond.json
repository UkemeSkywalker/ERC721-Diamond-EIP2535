{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_diamondCutFacet",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "EmptyCalldata",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "ImmutableFunction",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InValidFacetCutAction",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InitCallFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MustBeZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoCode",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoSelectorsInFacet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NonEmptyCalldata",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "NonExistentSelector",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "SameSelectorReplacement",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "SelectorExists",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "example",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x608060405260405162001f4838038062001f48833981016040819052620000269162000d9d565b6200003c826200015660201b6200011f1760201c565b604080516001808252818301909252600091816020015b60408051606080820183526000808352602083015291810191909152815260200190600190039081620000535750506040805160018082528183019092529192506000919060208083019080368337019050509050631f931c1c60e01b81600081518110620000c657620000c662000dd5565b6001600160e01b031990921660209283029190910182015260408051606081019091526001600160a01b038516815290810160008152602001828152508260008151811062000119576200011962000dd5565b60200260200101819052506200014c82600060405180602001604052806000815250620001da60201b620001a21760201c565b5050505062001032565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132080546001600160a01b031981166001600160a01b0384811691821790935560405160008051602062001f28833981519152939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b60005b8351811015620003a1576000848281518110620001fe57620001fe62000dd5565b60200260200101516020015190506000600281111562000222576200022262000deb565b81600281111562000237576200023762000deb565b0362000295576200028f85838151811062000256576200025662000dd5565b60200260200101516000015186848151811062000277576200027762000dd5565b602002602001015160400151620003f060201b60201c565b6200038b565b6001816002811115620002ac57620002ac62000deb565b0362000304576200028f858381518110620002cb57620002cb62000dd5565b602002602001015160000151868481518110620002ec57620002ec62000dd5565b602002602001015160400151620005d160201b60201c565b60028160028111156200031b576200031b62000deb565b0362000373576200028f8583815181106200033a576200033a62000dd5565b6020026020010151600001518684815181106200035b576200035b62000dd5565b602002602001015160400151620007b960201b60201c565b60405162c5e5d760e31b815260040160405180910390fd5b5080620003988162000e17565b915050620001dd565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673838383604051620003d79392919062000e90565b60405180910390a1620003eb828262000896565b505050565b6000815111620004135760405163092d2fe560e41b815260040160405180910390fd5b60008051602062001f288339815191526001600160a01b0383166200044b5760405163ddbadd5f60e01b815260040160405180910390fd5b6001600160a01b0383166000908152600182016020526040812054906001600160601b03821690036200048457620004848285620009b0565b60005b8351811015620005ca576000848281518110620004a857620004a862000dd5565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b031680156200050b5760405163501e70c760e01b81526001600160e01b0319831660048201526024015b60405180910390fd5b6001600160e01b0319821660008181526020878152604080832080546001600160a01b03908116600160a01b6001600160601b038c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281546001600160a01b03191617905583620005af8162000f97565b94505050508080620005c19062000e17565b91505062000487565b5050505050565b6000815111620005f45760405163092d2fe560e41b815260040160405180910390fd5b60008051602062001f288339815191526001600160a01b0383166200062c5760405163ddbadd5f60e01b815260040160405180910390fd5b6001600160a01b0383166000908152600182016020526040812054906001600160601b03821690036200066557620006658285620009b0565b60005b8351811015620005ca57600084828151811062000689576200068962000dd5565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b039081169087168103620006ed57604051631c04188b60e31b81526001600160e01b03198316600482015260240162000502565b620006fa85828462000a03565b6001600160e01b0319821660008181526020878152604080832080546001600160a01b03908116600160a01b6001600160601b038c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281546001600160a01b031916179055836200079e8162000f97565b94505050508080620007b09062000e17565b91505062000668565b6000815111620007dc5760405163092d2fe560e41b815260040160405180910390fd5b60008051602062001f288339815191526001600160a01b038316156200081557604051631be65fe560e21b815260040160405180910390fd5b60005b82518110156200089057600083828151811062000839576200083962000dd5565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b03166200087884828462000a03565b50508080620008879062000e17565b91505062000818565b50505050565b6001600160a01b038216620008ca57805115620008c65760405163c21b1ab760e01b815260040160405180910390fd5b5050565b8051600003620008ed57604051633011e86160e21b815260040160405180910390fd5b6001600160a01b03821630146200090957620009098262000d5f565b600080836001600160a01b03168360405162000926919062000fc8565b600060405180830381855af49150503d806000811462000963576040519150601f19603f3d011682016040523d82523d6000602084013e62000968565b606091505b509150915081620008905780511562000997578060405162461bcd60e51b815260040162000502919062000fe6565b604051633a18f8dd60e01b815260040160405180910390fd5b620009bb8162000d5f565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160a01b03821662000a3757604051622902d360e91b81526001600160e01b03198216600482015260240162000502565b306001600160a01b0383160362000a6e5760405163069731c560e41b81526001600160e01b03198216600482015260240162000502565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b0316929162000abf9162001002565b905080821462000bb8576001600160a01b0384166000908152600186016020526040812080548390811062000af85762000af862000dd5565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b92508291908590811062000b4c5762000b4c62000dd5565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b0384166000908152600186016020526040902080548062000be45762000be46200101c565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b03198516825286905260408120819055819003620005ca57600285015460009062000c4a9060019062001002565b6001600160a01b038616600090815260018089016020526040909120015490915080821462000d0057600087600201838154811062000c8d5762000c8d62000dd5565b6000918252602090912001546002890180546001600160a01b03909216925082918490811062000cc15762000cc162000dd5565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b8660020180548062000d165762000d166200101c565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b803b80620008c657604051633c11a9c560e21b815260040160405180910390fd5b80516001600160a01b038116811462000d9857600080fd5b919050565b6000806040838503121562000db157600080fd5b62000dbc8362000d80565b915062000dcc6020840162000d80565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820162000e2c5762000e2c62000e01565b5060010190565b60005b8381101562000e5057818101518382015260200162000e36565b83811115620008905750506000910152565b6000815180845262000e7c81602086016020860162000e33565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b8481101562000f6557898403607f19018652815180516001600160a01b0316855283810151898601906003811062000f0157634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b8083101562000f4f5783516001600160e01b031916825292860192600192909201919086019062000f23565b5097850197955050509082019060010162000eb9565b50506001600160a01b038a1690880152868103604088015262000f89818962000e62565b9a9950505050505050505050565b60006001600160601b038281166002600160601b0319810162000fbe5762000fbe62000e01565b6001019392505050565b6000825162000fdc81846020870162000e33565b9190910192915050565b60208152600062000ffb602083018462000e62565b9392505050565b60008282101562001017576200101762000e01565b500390565b634e487b7160e01b600052603160045260246000fd5b610ee680620010426000396000f3fe6080604052600436106100225760003560e01c806354353f2f146100d457610029565b3661002957005b600080356001600160e01b0319168152600080516020610e66833981519152602081905260409091205481906001600160a01b0316806100b05760405162461bcd60e51b815260206004820181905260248201527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f7420657869737460448201526064015b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100cf573d6000f35b3d6000fd5b3480156100e057600080fd5b506100e96100ff565b6040516100f69190610c81565b60405180910390f35b60606040518060600160405280602b8152602001610e86602b9139905090565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132080546001600160a01b031981166001600160a01b03848116918217909355604051600080516020610e66833981519152939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b60005b83518110156103285760008482815181106101c2576101c2610c9b565b6020026020010151602001519050600060028111156101e3576101e3610cb1565b8160028111156101f5576101f5610cb1565b036102435761023e85838151811061020f5761020f610c9b565b60200260200101516000015186848151811061022d5761022d610c9b565b602002602001015160400151610373565b610315565b600181600281111561025757610257610cb1565b036102a05761023e85838151811061027157610271610c9b565b60200260200101516000015186848151811061028f5761028f610c9b565b6020026020010151604001516104b3565b60028160028111156102b4576102b4610cb1565b036102fd5761023e8583815181106102ce576102ce610c9b565b6020026020010151600001518684815181106102ec576102ec610c9b565b6020026020010151604001516105fc565b60405162c5e5d760e31b815260040160405180910390fd5b508061032081610cdd565b9150506101a5565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161035c93929190610cf6565b60405180910390a161036e82826106cd565b505050565b60008151116103955760405163092d2fe560e41b815260040160405180910390fd5b600080516020610e668339815191526001600160a01b0383166103cb5760405163ddbadd5f60e01b815260040160405180910390fd5b6001600160a01b0383166000908152600182016020526040812054906001600160601b03821690036104015761040182856107d9565b60005b83518110156104ac57600084828151811061042157610421610c9b565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b0316801561047e5760405163501e70c760e01b81526001600160e01b0319831660048201526024016100a7565b61048a8583868a61082a565b8361049481610df6565b945050505080806104a490610cdd565b915050610404565b5050505050565b60008151116104d55760405163092d2fe560e41b815260040160405180910390fd5b600080516020610e668339815191526001600160a01b03831661050b5760405163ddbadd5f60e01b815260040160405180910390fd5b6001600160a01b0383166000908152600182016020526040812054906001600160601b03821690036105415761054182856107d9565b60005b83518110156104ac57600084828151811061056157610561610c9b565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b0390811690871681036105c357604051631c04188b60e31b81526001600160e01b0319831660048201526024016100a7565b6105ce8582846108ca565b6105da8583868a61082a565b836105e481610df6565b945050505080806105f490610cdd565b915050610544565b600081511161061e5760405163092d2fe560e41b815260040160405180910390fd5b600080516020610e668339815191526001600160a01b0383161561065557604051631be65fe560e21b815260040160405180910390fd5b60005b82518110156106c757600083828151811061067557610675610c9b565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b03166106b28482846108ca565b505080806106bf90610cdd565b915050610658565b50505050565b6001600160a01b0382166106ff578051156106fb5760405163c21b1ab760e01b815260040160405180910390fd5b5050565b805160000361072157604051633011e86160e21b815260040160405180910390fd5b6001600160a01b038216301461073a5761073a82610c09565b600080836001600160a01b0316836040516107559190610e1c565b600060405180830381855af49150503d8060008114610790576040519150601f19603f3d011682016040523d82523d6000602084013e610795565b606091505b5091509150816106c7578051156107c0578060405162461bcd60e51b81526004016100a79190610c81565b604051633a18f8dd60e01b815260040160405180910390fd5b6107e281610c09565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160e01b0319831660008181526020868152604080832080546001600160601b03909716600160a01b026001600160a01b0397881617815594909516808352600180890183529583208054968701815583528183206008870401805460e09890981c60046007909816979097026101000a96870263ffffffff9097021990971695909517909555529290915281546001600160a01b031916179055565b6001600160a01b0382166108fc57604051622902d360e91b81526001600160e01b0319821660048201526024016100a7565b306001600160a01b038316036109315760405163069731c560e41b81526001600160e01b0319821660048201526024016100a7565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b0316929161098091610e38565b9050808214610a72576001600160a01b038416600090815260018601602052604081208054839081106109b5576109b5610c9b565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b925082919085908110610a0657610a06610c9b565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b03841660009081526001860160205260409020805480610a9b57610a9b610e4f565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b031985168252869052604081208190558190036104ac576002850154600090610afe90600190610e38565b6001600160a01b0386166000908152600180890160205260409091200154909150808214610bad576000876002018381548110610b3d57610b3d610c9b565b6000918252602090912001546002890180546001600160a01b039092169250829184908110610b6e57610b6e610c9b565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b86600201805480610bc057610bc0610e4f565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b803b806106fb57604051633c11a9c560e21b815260040160405180910390fd5b60005b83811015610c44578181015183820152602001610c2c565b838111156106c75750506000910152565b60008151808452610c6d816020860160208601610c29565b601f01601f19169290920160200192915050565b602081526000610c946020830184610c55565b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610cef57610cef610cc7565b5060010190565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b84811015610dc657898403607f19018652815180516001600160a01b03168552838101518986019060038110610d6557634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b80831015610db15783516001600160e01b0319168252928601926001929092019190860190610d87565b50978501979550505090820190600101610d1f565b50506001600160a01b038a16908801528681036040880152610de88189610c55565b9a9950505050505050505050565b60006001600160601b03808316818103610e1257610e12610cc7565b6001019392505050565b60008251610e2e818460208701610c29565b9190910192915050565b600082821015610e4a57610e4a610cc7565b500390565b634e487b7160e01b600052603160045260246000fdfec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c5448495320495320414e204558414d504c45204f4620414e20494d4d555441424c452046554e4354494f4ea264697066735822122007d6a222059f20702a1382bb457d59bd304e47824caad1639f684a744e5486b364736f6c634300080d0033c8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c",
    "sourceMap": "509:2125:0:-:0;;;532:653;;;;;;;;;;;;;;;;;;:::i;:::-;612:43;640:14;612:27;;;;;:43;;:::i;:::-;775:29;;;802:1;775:29;;;;;;;;;739:33;;775:29;;;;509:2125;;;;;;;;;-1:-1:-1;509:2125:0;;;;;;;;;;;;;;775:29;;;;;;;;;;;;-1:-1:-1;;850:15:0;;;863:1;850:15;;;;;;;;;739:65;;-1:-1:-1;814:33:0;;850:15;;;;;;;;;;;;-1:-1:-1;850:15:0;814:51;;898:31;;;875:17;893:1;875:20;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;875:54:0;;;:20;;;;;;;;;;:54;948:178;;;;;;;;;-1:-1:-1;;;;;948:178:0;;;;;;;-1:-1:-1;948:178:0;;;;1098:17;948:178;;;939:3;943:1;939:6;;;;;;;;:::i;:::-;;;;;;:187;;;;1136:42;1158:3;1171:1;1136:42;;;;;;;;;;;;:21;;;;;:42;;:::i;:::-;602:583;;532:653;;509:2125;;2297:264:8;2439:16;;;-1:-1:-1;;;;;;2465:28:8;;-1:-1:-1;;;;;2465:28:8;;;;;;;;;2508:46;;-1:-1:-1;;;;;;;;;;;938:45:8;2439:16;;;;;;2508:46;;2361:25;;2508:46;2351:210;;2297:264;:::o;2992:1048::-;3148:18;3143:787;3181:11;:18;3168:10;:31;3143:787;;;3229:33;3265:11;3277:10;3265:23;;;;;;;;:::i;:::-;;;;;;;:30;;;3229:66;;3323:30;3313:40;;;;;;;;:::i;:::-;:6;:40;;;;;;;;:::i;:::-;;3309:611;;3373:93;3386:11;3398:10;3386:23;;;;;;;;:::i;:::-;;;;;;;:36;;;3424:11;3436:10;3424:23;;;;;;;;:::i;:::-;;;;;;;:41;;;3373:12;;;:93;;:::i;:::-;3309:611;;;3501:34;3491:6;:44;;;;;;;;:::i;:::-;;3487:433;;3555:97;3572:11;3584:10;3572:23;;;;;;;;:::i;:::-;;;;;;;:36;;;3610:11;3622:10;3610:23;;;;;;;;:::i;:::-;;;;;;;:41;;;3555:16;;;:97;;:::i;3487:433::-;3687:33;3677:6;:43;;;;;;;;:::i;:::-;;3673:247;;3740:96;3756:11;3768:10;3756:23;;;;;;;;:::i;:::-;;;;;;;:36;;;3794:11;3806:10;3794:23;;;;;;;;:::i;:::-;;;;;;;:41;;;3740:15;;;:96;;:::i;3673:247::-;3882:23;;-1:-1:-1;;;3882:23:8;;;;;;;;;;;3673:247;-1:-1:-1;3201:12:8;;;;:::i;:::-;;;;3143:787;;;;3944:41;3955:11;3968:5;3975:9;3944:41;;;;;;;;:::i;:::-;;;;;;;;3995:38;4016:5;4023:9;3995:20;:38::i;:::-;2992:1048;;;:::o;4046:989::-;4179:1;4150:18;:25;:30;4146:63;;4189:20;;-1:-1:-1;;;4189:20:8;;;;;;;;;;;4146:63;-1:-1:-1;;;;;;;;;;;;;;;;4277:27:8;;4273:55;;4313:15;;-1:-1:-1;;;4313:15:8;;;;;;;;;;;4273:55;-1:-1:-1;;;;;4371:40:8;;4338:23;4371:40;;;:25;;;:40;;;;;:65;;-1:-1:-1;;;;;4505:21:8;;;;4501:79;;4542:27;4551:2;4555:13;4542:8;:27::i;:::-;4594:21;4589:440;4633:18;:25;4617:13;:41;4589:440;;;4691:15;4709:18;4728:13;4709:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;4782:39:8;;4756:23;4782:39;;;;;;;;;;;:52;4709:33;;-1:-1:-1;;;;;;4782:52:8;4852:29;;4848:66;;4890:24;;-1:-1:-1;;;4890:24:8;;-1:-1:-1;;;;;;4051:33:17;;4890:24:8;;;4033:52:17;4006:18;;4890:24:8;;;;;;;;4848:66;-1:-1:-1;;;;;;7256:40:8;;:29;:40;;;;;;;;;;;:85;;-1:-1:-1;;;;;7256:85:8;;;-1:-1:-1;;;;;;;;7256:85:8;;;;;;7351:40;;;;;-1:-1:-1;7351:25:8;;;:40;;;;;:74;;;;;;;;;;;;;;;;;;;;;;;;;7256:85;7351:74;;;;;;;;;;;;;;;;;;;;;7435:40;;;;;;;:69;;-1:-1:-1;;;;;;7435:69:8;;;;5000:18;;;;:::i;:::-;;;;4677:352;;4660:15;;;;;:::i;:::-;;;;4589:440;;;;4136:899;;4046:989;;:::o;5041:1064::-;5178:1;5149:18;:25;:30;5145:63;;5188:20;;-1:-1:-1;;;5188:20:8;;;;;;;;;;;5145:63;-1:-1:-1;;;;;;;;;;;;;;;;5276:27:8;;5272:55;;5312:15;;-1:-1:-1;;;5312:15:8;;;;;;;;;;;5272:55;-1:-1:-1;;;;;5370:40:8;;5337:23;5370:40;;;:25;;;:40;;;;;:65;;-1:-1:-1;;;;;5504:21:8;;;;5500:79;;5541:27;5550:2;5554:13;5541:8;:27::i;:::-;5593:21;5588:511;5632:18;:25;5616:13;:41;5588:511;;;5690:15;5708:18;5727:13;5708:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;5781:39:8;;5755:23;5781:39;;;;;;;;;;;:52;5708:33;;-1:-1:-1;;;;;;5781:52:8;;;;5851:32;;;;5847:78;;5892:33;;-1:-1:-1;;;5892:33:8;;-1:-1:-1;;;;;;4051:33:17;;5892::8;;;4033:52:17;4006:18;;5892:33:8;3889:202:17;5847:78:8;5939:45;5954:2;5958:15;5975:8;5939:14;:45::i;:::-;-1:-1:-1;;;;;;7256:40:8;;:29;:40;;;;;;;;;;;:85;;-1:-1:-1;;;;;7256:85:8;;;-1:-1:-1;;;;;;;;7256:85:8;;;;;;7351:40;;;;;-1:-1:-1;7351:25:8;;;:40;;;;;:74;;;;;;;;;;;;;;;;;;;;;;;;;7256:85;7351:74;;;;;;;;;;;;;;;;;;;;;7435:40;;;;;;;:69;;-1:-1:-1;;;;;;7435:69:8;;;;6070:18;;;;:::i;:::-;;;;5676:423;;5659:15;;;;;:::i;:::-;;;;5588:511;;6111:685;6247:1;6218:18;:25;:30;6214:63;;6257:20;;-1:-1:-1;;;6257:20:8;;;;;;;;;;;6214:63;-1:-1:-1;;;;;;;;;;;;;;;;6410:27:8;;;6406:59;;6446:19;;-1:-1:-1;;;6446:19:8;;;;;;;;;;;6406:59;6480:21;6475:315;6519:18;:25;6503:13;:41;6475:315;;;6577:15;6595:18;6614:13;6595:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;6668:39:8;;6642:23;6668:39;;;;;;;;;;;:52;6595:33;;-1:-1:-1;;;;;;6668:52:8;6734:45;6668:2;:52;6595:33;6734:14;:45::i;:::-;6563:227;;6546:15;;;;;:::i;:::-;;;;6475:315;;;;6204:592;6111:685;;:::o;9692:714::-;-1:-1:-1;;;;;9784:19:8;;9780:620;;9823:16;;:20;9819:51;;9852:18;;-1:-1:-1;;;9852:18:8;;;;;;;;;;;9819:51;9692:714;;:::o;9780:620::-;9905:9;:16;9925:1;9905:21;9901:49;;9935:15;;-1:-1:-1;;;9935:15:8;;;;;;;;;;;9901:49;-1:-1:-1;;;;;9968:22:8;;9985:4;9968:22;9964:90;;10010:29;10033:5;10010:22;:29::i;:::-;10068:12;10082:18;10104:5;-1:-1:-1;;;;;10104:18:8;10123:9;10104:29;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10067:66;;;;10152:7;10147:243;;10183:12;;:16;10179:197;;10280:5;10266:21;;-1:-1:-1;;;10266:21:8;;;;;;;;:::i;10179:197::-;10341:16;;-1:-1:-1;;;10341:16:8;;;;;;;;;;;6802:276;6889:37;6912:13;6889:22;:37::i;:::-;7000:17;;;:24;;-1:-1:-1;;;;;6936:40:8;;;;;;;:25;;;;:40;;;;;;;:61;;:88;;;7034:37;;;;;;;;;;;;;;-1:-1:-1;;;;;;7034:37:8;;;;;;6802:276::o;7517:2169::-;-1:-1:-1;;;;;7662:27:8;;7658:70;;7698:30;;-1:-1:-1;;;7698:30:8;;-1:-1:-1;;;;;;4051:33:17;;7698:30:8;;;4033:52:17;4006:18;;7698:30:8;3889:202:17;7658:70:8;7844:4;-1:-1:-1;;;;;7819:30:8;;;7815:71;;7858:28;;-1:-1:-1;;;7858:28:8;;-1:-1:-1;;;;;;4051:33:17;;7858:28:8;;;4033:52:17;4006:18;;7858:28:8;3889:202:17;7815:71:8;-1:-1:-1;;;;;;7997:40:8;;7970:24;7997:40;;;;;;;;;;;:65;-1:-1:-1;;;;;8103:40:8;;;;8171:1;8103:25;;;:40;;;;;;:65;-1:-1:-1;;;7997:65:8;;;-1:-1:-1;;;;;7997:65:8;;7970:24;8103:69;;;:::i;:::-;8072:100;;8274:20;8254:16;:40;8250:387;;-1:-1:-1;;;;;8332:40:8;;8310:19;8332:40;;;:25;;;:40;;;;;:80;;8391:20;;8332:80;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;8426:40:8;;;;:25;;;:40;;;;;;;:76;;8332:80;;;;;;;;;;;;;;-1:-1:-1;8332:80:8;;8426:40;8485:16;;8426:76;;;;;;:::i;:::-;;;;;;;;;;;;;:91;;;:76;;;;;;:91;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8531:43:8;;;;;;;;;;;;:95;;-1:-1:-1;;;;;8531:95:8;-1:-1:-1;;;;;;;;8531:95:8;;;;;;8250:387;-1:-1:-1;;;;;8682:40:8;;;;;;:25;;;:40;;;;;:64;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;8682:64:8;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8763:40:8;;;;;;;;;;8756:47;;;8898:25;;;8894:786;;9065:17;;;:24;9030:32;;9065:28;;9092:1;;9065:28;:::i;:::-;-1:-1:-1;;;;;9138:40:8;;9107:28;9138:40;;;:25;;;;:40;;;;;;:61;;9030:63;;-1:-1:-1;9217:48:8;;;9213:338;;9285:24;9312:2;:17;;9330:24;9312:43;;;;;;;;:::i;:::-;;;;;;;;;;;9373:17;;;:39;;-1:-1:-1;;;;;9312:43:8;;;;-1:-1:-1;9312:43:8;;9391:20;;9373:39;;;;;;:::i;:::-;;;;;;;;;;;;;:58;;-1:-1:-1;;;;;;9373:58:8;-1:-1:-1;;;;;9373:58:8;;;;;;9449:43;;;;;;-1:-1:-1;9449:25:8;;;:43;;;;;;:64;:87;;;9213:338;9564:2;:17;;:23;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;9564:23:8;;;;;-1:-1:-1;;;;;;9564:23:8;;;;;;;;;-1:-1:-1;;;;;9608:40:8;;;;9564:23;9608:25;;;:40;;;;;;:61;9601:68;-1:-1:-1;;7648:2038:8;;7517:2169;;;:::o;10412:230::-;10556:22;;10601:17;10597:38;;10627:8;;-1:-1:-1;;;10627:8:8;;;;;;;;;;;14:177:17;93:13;;-1:-1:-1;;;;;135:31:17;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;626:127::-;687:10;682:3;678:20;675:1;668:31;718:4;715:1;708:15;742:4;739:1;732:15;758:127;819:10;814:3;810:20;807:1;800:31;850:4;847:1;840:15;874:4;871:1;864:15;890:127;951:10;946:3;942:20;939:1;932:31;982:4;979:1;972:15;1006:4;1003:1;996:15;1022:135;1061:3;1082:17;;;1079:43;;1102:18;;:::i;:::-;-1:-1:-1;1149:1:17;1138:13;;1022:135::o;1271:258::-;1343:1;1353:113;1367:6;1364:1;1361:13;1353:113;;;1443:11;;;1437:18;1424:11;;;1417:39;1389:2;1382:10;1353:113;;;1484:6;1481:1;1478:13;1475:48;;;-1:-1:-1;;1519:1:17;1501:16;;1494:27;1271:258::o;1534:257::-;1575:3;1613:5;1607:12;1640:6;1635:3;1628:19;1656:63;1712:6;1705:4;1700:3;1696:14;1689:4;1682:5;1678:16;1656:63;:::i;:::-;1773:2;1752:15;-1:-1:-1;;1748:29:17;1739:39;;;;1780:4;1735:50;;1534:257;-1:-1:-1;;1534:257:17:o;1796:2088::-;2062:4;2091:2;2131;2120:9;2116:18;2161:2;2150:9;2143:21;2184:6;2219;2213:13;2250:6;2242;2235:22;2276:3;2266:13;;2310:2;2299:9;2295:18;2288:25;;2372:2;2362:6;2359:1;2355:14;2344:9;2340:30;2336:39;2394:4;2433:2;2425:6;2421:15;2454:1;2464:1249;2478:6;2475:1;2472:13;2464:1249;;;2543:22;;;-1:-1:-1;;2539:37:17;2527:50;;2600:13;;2687:9;;-1:-1:-1;;;;;2683:35:17;2668:51;;2758:11;;;2752:18;2640:15;;;;2810:1;2793:19;;2783:170;;2863:10;2858:3;2854:20;2851:1;2844:31;2902:4;2899:1;2892:15;2934:4;2931:1;2924:15;2783:170;2973:15;;;2966:37;3026:4;3071:11;;;3065:18;3103:15;;;3096:27;;;3184:21;;3218:24;;;;3308:23;;;;-1:-1:-1;;3264:15:17;;;;3369:236;3385:8;3380:3;3377:17;3369:236;;;3466:15;;-1:-1:-1;;;;;;3462:42:17;3448:57;;3574:17;;;;3413:1;3404:11;;;;;3531:14;;;;3369:236;;;-1:-1:-1;3691:12:17;;;;3628:5;-1:-1:-1;;;3656:15:17;;;;2500:1;2493:9;2464:1249;;;-1:-1:-1;;;;;;;1228:31:17;;3749:18;;;1216:44;3806:22;;;3799:4;3784:20;;3777:52;3846:32;3810:6;3863;3846:32;:::i;:::-;3838:40;1796:2088;-1:-1:-1;;;;;;;;;;1796:2088:17:o;4096:209::-;4134:3;-1:-1:-1;;;;;4204:14:17;;;-1:-1:-1;;;;;;4230:15:17;;4227:41;;4248:18;;:::i;:::-;4297:1;4284:15;;4096:209;-1:-1:-1;;;4096:209:17:o;4310:274::-;4439:3;4477:6;4471:13;4493:53;4539:6;4534:3;4527:4;4519:6;4515:17;4493:53;:::i;:::-;4562:16;;;;;4310:274;-1:-1:-1;;4310:274:17:o;4589:219::-;4738:2;4727:9;4720:21;4701:4;4758:44;4798:2;4787:9;4783:18;4775:6;4758:44;:::i;:::-;4750:52;4589:219;-1:-1:-1;;;4589:219:17:o;4813:125::-;4853:4;4881:1;4878;4875:8;4872:34;;;4886:18;;:::i;:::-;-1:-1:-1;4923:9:17;;4813:125::o;4943:127::-;5004:10;4999:3;4995:20;4992:1;4985:31;5035:4;5032:1;5025:15;5059:4;5056:1;5049:15;4943:127;509:2125:0;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100225760003560e01c806354353f2f146100d457610029565b3661002957005b600080356001600160e01b0319168152600080516020610e66833981519152602081905260409091205481906001600160a01b0316806100b05760405162461bcd60e51b815260206004820181905260248201527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f7420657869737460448201526064015b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100cf573d6000f35b3d6000fd5b3480156100e057600080fd5b506100e96100ff565b6040516100f69190610c81565b60405180910390f35b60606040518060600160405280602b8152602001610e86602b9139905090565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132080546001600160a01b031981166001600160a01b03848116918217909355604051600080516020610e66833981519152939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b60005b83518110156103285760008482815181106101c2576101c2610c9b565b6020026020010151602001519050600060028111156101e3576101e3610cb1565b8160028111156101f5576101f5610cb1565b036102435761023e85838151811061020f5761020f610c9b565b60200260200101516000015186848151811061022d5761022d610c9b565b602002602001015160400151610373565b610315565b600181600281111561025757610257610cb1565b036102a05761023e85838151811061027157610271610c9b565b60200260200101516000015186848151811061028f5761028f610c9b565b6020026020010151604001516104b3565b60028160028111156102b4576102b4610cb1565b036102fd5761023e8583815181106102ce576102ce610c9b565b6020026020010151600001518684815181106102ec576102ec610c9b565b6020026020010151604001516105fc565b60405162c5e5d760e31b815260040160405180910390fd5b508061032081610cdd565b9150506101a5565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161035c93929190610cf6565b60405180910390a161036e82826106cd565b505050565b60008151116103955760405163092d2fe560e41b815260040160405180910390fd5b600080516020610e668339815191526001600160a01b0383166103cb5760405163ddbadd5f60e01b815260040160405180910390fd5b6001600160a01b0383166000908152600182016020526040812054906001600160601b03821690036104015761040182856107d9565b60005b83518110156104ac57600084828151811061042157610421610c9b565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b0316801561047e5760405163501e70c760e01b81526001600160e01b0319831660048201526024016100a7565b61048a8583868a61082a565b8361049481610df6565b945050505080806104a490610cdd565b915050610404565b5050505050565b60008151116104d55760405163092d2fe560e41b815260040160405180910390fd5b600080516020610e668339815191526001600160a01b03831661050b5760405163ddbadd5f60e01b815260040160405180910390fd5b6001600160a01b0383166000908152600182016020526040812054906001600160601b03821690036105415761054182856107d9565b60005b83518110156104ac57600084828151811061056157610561610c9b565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b0390811690871681036105c357604051631c04188b60e31b81526001600160e01b0319831660048201526024016100a7565b6105ce8582846108ca565b6105da8583868a61082a565b836105e481610df6565b945050505080806105f490610cdd565b915050610544565b600081511161061e5760405163092d2fe560e41b815260040160405180910390fd5b600080516020610e668339815191526001600160a01b0383161561065557604051631be65fe560e21b815260040160405180910390fd5b60005b82518110156106c757600083828151811061067557610675610c9b565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b03166106b28482846108ca565b505080806106bf90610cdd565b915050610658565b50505050565b6001600160a01b0382166106ff578051156106fb5760405163c21b1ab760e01b815260040160405180910390fd5b5050565b805160000361072157604051633011e86160e21b815260040160405180910390fd5b6001600160a01b038216301461073a5761073a82610c09565b600080836001600160a01b0316836040516107559190610e1c565b600060405180830381855af49150503d8060008114610790576040519150601f19603f3d011682016040523d82523d6000602084013e610795565b606091505b5091509150816106c7578051156107c0578060405162461bcd60e51b81526004016100a79190610c81565b604051633a18f8dd60e01b815260040160405180910390fd5b6107e281610c09565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160e01b0319831660008181526020868152604080832080546001600160601b03909716600160a01b026001600160a01b0397881617815594909516808352600180890183529583208054968701815583528183206008870401805460e09890981c60046007909816979097026101000a96870263ffffffff9097021990971695909517909555529290915281546001600160a01b031916179055565b6001600160a01b0382166108fc57604051622902d360e91b81526001600160e01b0319821660048201526024016100a7565b306001600160a01b038316036109315760405163069731c560e41b81526001600160e01b0319821660048201526024016100a7565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b0316929161098091610e38565b9050808214610a72576001600160a01b038416600090815260018601602052604081208054839081106109b5576109b5610c9b565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b925082919085908110610a0657610a06610c9b565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b03841660009081526001860160205260409020805480610a9b57610a9b610e4f565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b031985168252869052604081208190558190036104ac576002850154600090610afe90600190610e38565b6001600160a01b0386166000908152600180890160205260409091200154909150808214610bad576000876002018381548110610b3d57610b3d610c9b565b6000918252602090912001546002890180546001600160a01b039092169250829184908110610b6e57610b6e610c9b565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b86600201805480610bc057610bc0610e4f565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b803b806106fb57604051633c11a9c560e21b815260040160405180910390fd5b60005b83811015610c44578181015183820152602001610c2c565b838111156106c75750506000910152565b60008151808452610c6d816020860160208601610c29565b601f01601f19169290920160200192915050565b602081526000610c946020830184610c55565b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610cef57610cef610cc7565b5060010190565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b84811015610dc657898403607f19018652815180516001600160a01b03168552838101518986019060038110610d6557634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b80831015610db15783516001600160e01b0319168252928601926001929092019190860190610d87565b50978501979550505090820190600101610d1f565b50506001600160a01b038a16908801528681036040880152610de88189610c55565b9a9950505050505050505050565b60006001600160601b03808316818103610e1257610e12610cc7565b6001019392505050565b60008251610e2e818460208701610c29565b9190910192915050565b600082821015610e4a57610e4a610cc7565b500390565b634e487b7160e01b600052603160045260246000fdfec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c5448495320495320414e204558414d504c45204f4620414e20494d4d555441424c452046554e4354494f4ea264697066735822122007d6a222059f20702a1382bb457d59bd304e47824caad1639f684a744e5486b364736f6c634300080d0033",
    "sourceMap": "509:2125:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;1349:36;1641:7;;-1:-1:-1;;;;;;1641:7:0;1611:38;;-1:-1:-1;;;;;;;;;;;1611:38:0;;;;;;;;:51;938:45:8;;-1:-1:-1;;;;;1611:51:0;;1672:64;;;;-1:-1:-1;;;1672:64:0;;216:2:17;1672:64:0;;;198:21:17;;;235:18;;;228:30;294:34;274:18;;;267:62;346:18;;1672:64:0;;;;;;;;;1933:14;1930:1;1927;1914:34;2077:1;2074;2058:14;2055:1;2048:5;2041;2028:51;2149:16;2146:1;2143;2128:38;2253:6;2272:66;;;;2387:16;2384:1;2377:27;2272:66;2307:16;2304:1;2297:27;2473:124;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;2513:13;2538:52;;;;;;;;;;;;;;;;;;;2473:124;:::o;2297:264:8:-;2439:16;;;-1:-1:-1;;;;;;2465:28:8;;-1:-1:-1;;;;;2465:28:8;;;;;;;;;2508:46;;-1:-1:-1;;;;;;;;;;;938:45:8;2439:16;;;;;;2508:46;;2361:25;;2508:46;2351:210;;2297:264;:::o;2992:1048::-;3148:18;3143:787;3181:11;:18;3168:10;:31;3143:787;;;3229:33;3265:11;3277:10;3265:23;;;;;;;;:::i;:::-;;;;;;;:30;;;3229:66;;3323:30;3313:40;;;;;;;;:::i;:::-;:6;:40;;;;;;;;:::i;:::-;;3309:611;;3373:93;3386:11;3398:10;3386:23;;;;;;;;:::i;:::-;;;;;;;:36;;;3424:11;3436:10;3424:23;;;;;;;;:::i;:::-;;;;;;;:41;;;3373:12;:93::i;:::-;3309:611;;;3501:34;3491:6;:44;;;;;;;;:::i;:::-;;3487:433;;3555:97;3572:11;3584:10;3572:23;;;;;;;;:::i;:::-;;;;;;;:36;;;3610:11;3622:10;3610:23;;;;;;;;:::i;:::-;;;;;;;:41;;;3555:16;:97::i;3487:433::-;3687:33;3677:6;:43;;;;;;;;:::i;:::-;;3673:247;;3740:96;3756:11;3768:10;3756:23;;;;;;;;:::i;:::-;;;;;;;:36;;;3794:11;3806:10;3794:23;;;;;;;;:::i;:::-;;;;;;;:41;;;3740:15;:96::i;3673:247::-;3882:23;;-1:-1:-1;;;3882:23:8;;;;;;;;;;;3673:247;-1:-1:-1;3201:12:8;;;;:::i;:::-;;;;3143:787;;;;3944:41;3955:11;3968:5;3975:9;3944:41;;;;;;;;:::i;:::-;;;;;;;;3995:38;4016:5;4023:9;3995:20;:38::i;:::-;2992:1048;;;:::o;4046:989::-;4179:1;4150:18;:25;:30;4146:63;;4189:20;;-1:-1:-1;;;4189:20:8;;;;;;;;;;;4146:63;-1:-1:-1;;;;;;;;;;;;;;;;4277:27:8;;4273:55;;4313:15;;-1:-1:-1;;;4313:15:8;;;;;;;;;;;4273:55;-1:-1:-1;;;;;4371:40:8;;4338:23;4371:40;;;:25;;;:40;;;;;:65;;-1:-1:-1;;;;;4505:21:8;;;;4501:79;;4542:27;4551:2;4555:13;4542:8;:27::i;:::-;4594:21;4589:440;4633:18;:25;4617:13;:41;4589:440;;;4691:15;4709:18;4728:13;4709:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;4782:39:8;;4756:23;4782:39;;;;;;;;;;;:52;4709:33;;-1:-1:-1;;;;;;4782:52:8;4852:29;;4848:66;;4890:24;;-1:-1:-1;;;4890:24:8;;-1:-1:-1;;;;;;4027:33:17;;4890:24:8;;;4009:52:17;3982:18;;4890:24:8;3865:202:17;4848:66:8;4928:58;4940:2;4944:8;4954:16;4972:13;4928:11;:58::i;:::-;5000:18;;;;:::i;:::-;;;;4677:352;;4660:15;;;;;:::i;:::-;;;;4589:440;;;;4136:899;;4046:989;;:::o;5041:1064::-;5178:1;5149:18;:25;:30;5145:63;;5188:20;;-1:-1:-1;;;5188:20:8;;;;;;;;;;;5145:63;-1:-1:-1;;;;;;;;;;;;;;;;5276:27:8;;5272:55;;5312:15;;-1:-1:-1;;;5312:15:8;;;;;;;;;;;5272:55;-1:-1:-1;;;;;5370:40:8;;5337:23;5370:40;;;:25;;;:40;;;;;:65;;-1:-1:-1;;;;;5504:21:8;;;;5500:79;;5541:27;5550:2;5554:13;5541:8;:27::i;:::-;5593:21;5588:511;5632:18;:25;5616:13;:41;5588:511;;;5690:15;5708:18;5727:13;5708:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;5781:39:8;;5755:23;5781:39;;;;;;;;;;;:52;5708:33;;-1:-1:-1;;;;;;5781:52:8;;;;5851:32;;;;5847:78;;5892:33;;-1:-1:-1;;;5892:33:8;;-1:-1:-1;;;;;;4027:33:17;;5892::8;;;4009:52:17;3982:18;;5892:33:8;3865:202:17;5847:78:8;5939:45;5954:2;5958:15;5975:8;5939:14;:45::i;:::-;5998:58;6010:2;6014:8;6024:16;6042:13;5998:11;:58::i;:::-;6070:18;;;;:::i;:::-;;;;5676:423;;5659:15;;;;;:::i;:::-;;;;5588:511;;6111:685;6247:1;6218:18;:25;:30;6214:63;;6257:20;;-1:-1:-1;;;6257:20:8;;;;;;;;;;;6214:63;-1:-1:-1;;;;;;;;;;;;;;;;6410:27:8;;;6406:59;;6446:19;;-1:-1:-1;;;6446:19:8;;;;;;;;;;;6406:59;6480:21;6475:315;6519:18;:25;6503:13;:41;6475:315;;;6577:15;6595:18;6614:13;6595:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;6668:39:8;;6642:23;6668:39;;;;;;;;;;;:52;6595:33;;-1:-1:-1;;;;;;6668:52:8;6734:45;6668:2;:52;6595:33;6734:14;:45::i;:::-;6563:227;;6546:15;;;;;:::i;:::-;;;;6475:315;;;;6204:592;6111:685;;:::o;9692:714::-;-1:-1:-1;;;;;9784:19:8;;9780:620;;9823:16;;:20;9819:51;;9852:18;;-1:-1:-1;;;9852:18:8;;;;;;;;;;;9819:51;9692:714;;:::o;9780:620::-;9905:9;:16;9925:1;9905:21;9901:49;;9935:15;;-1:-1:-1;;;9935:15:8;;;;;;;;;;;9901:49;-1:-1:-1;;;;;9968:22:8;;9985:4;9968:22;9964:90;;10010:29;10033:5;10010:22;:29::i;:::-;10068:12;10082:18;10104:5;-1:-1:-1;;;;;10104:18:8;10123:9;10104:29;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10067:66;;;;10152:7;10147:243;;10183:12;;:16;10179:197;;10280:5;10266:21;;-1:-1:-1;;;10266:21:8;;;;;;;;:::i;10179:197::-;10341:16;;-1:-1:-1;;;10341:16:8;;;;;;;;;;;6802:276;6889:37;6912:13;6889:22;:37::i;:::-;7000:17;;;:24;;-1:-1:-1;;;;;6936:40:8;;;;;;;:25;;;;:40;;;;;;;:61;;:88;;;7034:37;;;;;;;;;;;;;;-1:-1:-1;;;;;;7034:37:8;;;;;;6802:276::o;7084:427::-;-1:-1:-1;;;;;;7256:40:8;;:29;:40;;;;;;;;;;;:85;;-1:-1:-1;;;;;7256:85:8;;;-1:-1:-1;;;7256:85:8;-1:-1:-1;;;;;7256:85:8;;;;;;7351:40;;;;;;;-1:-1:-1;7351:25:8;;;:40;;;;;:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7256:85;7351:74;;;;;;;;;;;;;;;;;;;7435:40;;;;;:69;;-1:-1:-1;;;;;;7435:69:8;;;;7084:427::o;7517:2169::-;-1:-1:-1;;;;;7662:27:8;;7658:70;;7698:30;;-1:-1:-1;;;7698:30:8;;-1:-1:-1;;;;;;4027:33:17;;7698:30:8;;;4009:52:17;3982:18;;7698:30:8;3865:202:17;7658:70:8;7844:4;-1:-1:-1;;;;;7819:30:8;;;7815:71;;7858:28;;-1:-1:-1;;;7858:28:8;;-1:-1:-1;;;;;;4027:33:17;;7858:28:8;;;4009:52:17;3982:18;;7858:28:8;3865:202:17;7815:71:8;-1:-1:-1;;;;;;7997:40:8;;7970:24;7997:40;;;;;;;;;;;:65;-1:-1:-1;;;;;8103:40:8;;;;8171:1;8103:25;;;:40;;;;;;:65;-1:-1:-1;;;7997:65:8;;;-1:-1:-1;;;;;7997:65:8;;7970:24;8103:69;;;:::i;:::-;8072:100;;8274:20;8254:16;:40;8250:387;;-1:-1:-1;;;;;8332:40:8;;8310:19;8332:40;;;:25;;;:40;;;;;:80;;8391:20;;8332:80;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;8426:40:8;;;;:25;;;:40;;;;;;;:76;;8332:80;;;;;;;;;;;;;;-1:-1:-1;8332:80:8;;8426:40;8485:16;;8426:76;;;;;;:::i;:::-;;;;;;;;;;;;;:91;;;:76;;;;;;:91;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8531:43:8;;;;;;;;;;;;:95;;-1:-1:-1;;;;;8531:95:8;-1:-1:-1;;;;;;;;8531:95:8;;;;;;8250:387;-1:-1:-1;;;;;8682:40:8;;;;;;:25;;;:40;;;;;:64;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;8682:64:8;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8763:40:8;;;;;;;;;;8756:47;;;8898:25;;;8894:786;;9065:17;;;:24;9030:32;;9065:28;;9092:1;;9065:28;:::i;:::-;-1:-1:-1;;;;;9138:40:8;;9107:28;9138:40;;;:25;;;;:40;;;;;;:61;;9030:63;;-1:-1:-1;9217:48:8;;;9213:338;;9285:24;9312:2;:17;;9330:24;9312:43;;;;;;;;:::i;:::-;;;;;;;;;;;9373:17;;;:39;;-1:-1:-1;;;;;9312:43:8;;;;-1:-1:-1;9312:43:8;;9391:20;;9373:39;;;;;;:::i;:::-;;;;;;;;;;;;;:58;;-1:-1:-1;;;;;;9373:58:8;-1:-1:-1;;;;;9373:58:8;;;;;;9449:43;;;;;;-1:-1:-1;9449:25:8;;;:43;;;;;;:64;:87;;;9213:338;9564:2;:17;;:23;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;9564:23:8;;;;;-1:-1:-1;;;;;;9564:23:8;;;;;;;;;-1:-1:-1;;;;;9608:40:8;;;;9564:23;9608:25;;;:40;;;;;;:61;9601:68;-1:-1:-1;;7648:2038:8;;7517:2169;;;:::o;10412:230::-;10556:22;;10601:17;10597:38;;10627:8;;-1:-1:-1;;;10627:8:8;;;;;;;;;;;375:258:17;447:1;457:113;471:6;468:1;465:13;457:113;;;547:11;;;541:18;528:11;;;521:39;493:2;486:10;457:113;;;588:6;585:1;582:13;579:48;;;-1:-1:-1;;623:1:17;605:16;;598:27;375:258::o;638:::-;680:3;718:5;712:12;745:6;740:3;733:19;761:63;817:6;810:4;805:3;801:14;794:4;787:5;783:16;761:63;:::i;:::-;878:2;857:15;-1:-1:-1;;853:29:17;844:39;;;;885:4;840:50;;638:258;-1:-1:-1;;638:258:17:o;901:220::-;1050:2;1039:9;1032:21;1013:4;1070:45;1111:2;1100:9;1096:18;1088:6;1070:45;:::i;:::-;1062:53;901:220;-1:-1:-1;;;901:220:17:o;1126:127::-;1187:10;1182:3;1178:20;1175:1;1168:31;1218:4;1215:1;1208:15;1242:4;1239:1;1232:15;1258:127;1319:10;1314:3;1310:20;1307:1;1300:31;1350:4;1347:1;1340:15;1374:4;1371:1;1364:15;1390:127;1451:10;1446:3;1442:20;1439:1;1432:31;1482:4;1479:1;1472:15;1506:4;1503:1;1496:15;1522:135;1561:3;1582:17;;;1579:43;;1602:18;;:::i;:::-;-1:-1:-1;1649:1:17;1638:13;;1522:135::o;1771:2089::-;2037:4;2066:2;2106;2095:9;2091:18;2136:2;2125:9;2118:21;2159:6;2194;2188:13;2225:6;2217;2210:22;2251:3;2241:13;;2285:2;2274:9;2270:18;2263:25;;2347:2;2337:6;2334:1;2330:14;2319:9;2315:30;2311:39;2369:4;2408:2;2400:6;2396:15;2429:1;2439:1249;2453:6;2450:1;2447:13;2439:1249;;;2518:22;;;-1:-1:-1;;2514:37:17;2502:50;;2575:13;;2662:9;;-1:-1:-1;;;;;2658:35:17;2643:51;;2733:11;;;2727:18;2615:15;;;;2785:1;2768:19;;2758:170;;2838:10;2833:3;2829:20;2826:1;2819:31;2877:4;2874:1;2867:15;2909:4;2906:1;2899:15;2758:170;2948:15;;;2941:37;3001:4;3046:11;;;3040:18;3078:15;;;3071:27;;;3159:21;;3193:24;;;;3283:23;;;;-1:-1:-1;;3239:15:17;;;;3344:236;3360:8;3355:3;3352:17;3344:236;;;3441:15;;-1:-1:-1;;;;;;3437:42:17;3423:57;;3549:17;;;;3388:1;3379:11;;;;;3506:14;;;;3344:236;;;-1:-1:-1;3666:12:17;;;;3603:5;-1:-1:-1;;;3631:15:17;;;;2475:1;2468:9;2439:1249;;;-1:-1:-1;;;;;;;1728:31:17;;3724:18;;;1716:44;3781:22;;;3774:4;3759:20;;3752:52;3821:33;3785:6;3839;3821:33;:::i;:::-;3813:41;1771:2089;-1:-1:-1;;;;;;;;;;1771:2089:17:o;4072:217::-;4110:3;-1:-1:-1;;;;;4199:2:17;4192:5;4188:14;4226:2;4217:7;4214:15;4211:41;;4232:18;;:::i;:::-;4281:1;4268:15;;4072:217;-1:-1:-1;;;4072:217:17:o;4294:274::-;4423:3;4461:6;4455:13;4477:53;4523:6;4518:3;4511:4;4503:6;4499:17;4477:53;:::i;:::-;4546:16;;;;;4294:274;-1:-1:-1;;4294:274:17:o;4573:125::-;4613:4;4641:1;4638;4635:8;4632:34;;;4646:18;;:::i;:::-;-1:-1:-1;4683:9:17;;4573:125::o;4703:127::-;4764:10;4759:3;4755:20;4752:1;4745:31;4795:4;4792:1;4785:15;4819:4;4816:1;4809:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "example()": "54353f2f"
  },
  "ast": {
    "absolutePath": "/Users/user/Downloads/Blockchain/ERC721-Diamond-EIP2535/contracts/Diamond.sol",
    "id": 125,
    "exportedSymbols": {
      "Diamond": [
        124
      ],
      "IDiamondCut": [
        422
      ],
      "LibDiamond": [
        1363
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2603:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "32:23:0",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "395:54:0",
        "absolutePath": "/Users/user/Downloads/Blockchain/ERC721-Diamond-EIP2535/contracts/libraries/LibDiamond.sol",
        "file": "./libraries/LibDiamond.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 125,
        "sourceUnit": 1364,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "LibDiamond",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1363,
              "src": "403:10:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5,
        "nodeType": "ImportDirective",
        "src": "450:57:0",
        "absolutePath": "/Users/user/Downloads/Blockchain/ERC721-Diamond-EIP2535/contracts/interfaces/IDiamondCut.sol",
        "file": "./interfaces/IDiamondCut.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 125,
        "sourceUnit": 423,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4,
              "name": "IDiamondCut",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 422,
              "src": "458:11:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 124,
        "nodeType": "ContractDefinition",
        "src": "509:2125:0",
        "nodes": [
          {
            "id": 75,
            "nodeType": "FunctionDefinition",
            "src": "532:653:0",
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "602:583:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15,
                        "name": "_contractOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "640:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 12,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1363,
                        "src": "612:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1363_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 14,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setContractOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 617,
                      "src": "612:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "612:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17,
                  "nodeType": "ExpressionStatement",
                  "src": "612:43:0"
                },
                {
                  "assignments": [
                    23
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23,
                      "mutability": "mutable",
                      "name": "cut",
                      "nameLocation": "769:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 74,
                      "src": "739:33:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FacetCut_$399_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct IDiamondCut.FacetCut[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 21,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 20,
                            "name": "IDiamondCut.FacetCut",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 399,
                            "src": "739:20:0"
                          },
                          "referencedDeclaration": 399,
                          "src": "739:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FacetCut_$399_storage_ptr",
                            "typeString": "struct IDiamondCut.FacetCut"
                          }
                        },
                        "id": 22,
                        "nodeType": "ArrayTypeName",
                        "src": "739:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$399_storage_$dyn_storage_ptr",
                          "typeString": "struct IDiamondCut.FacetCut[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 28,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "802:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 27,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "775:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_FacetCut_$399_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct IDiamondCut.FacetCut memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 25,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24,
                            "name": "IDiamondCut.FacetCut",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 399,
                            "src": "779:20:0"
                          },
                          "referencedDeclaration": 399,
                          "src": "779:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FacetCut_$399_storage_ptr",
                            "typeString": "struct IDiamondCut.FacetCut"
                          }
                        },
                        "id": 26,
                        "nodeType": "ArrayTypeName",
                        "src": "779:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$399_storage_$dyn_storage_ptr",
                          "typeString": "struct IDiamondCut.FacetCut[]"
                        }
                      }
                    },
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "775:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_FacetCut_$399_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct IDiamondCut.FacetCut memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "739:65:0"
                },
                {
                  "assignments": [
                    35
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35,
                      "mutability": "mutable",
                      "name": "functionSelectors",
                      "nameLocation": "830:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 74,
                      "src": "814:33:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                        "typeString": "bytes4[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 33,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "814:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 34,
                        "nodeType": "ArrayTypeName",
                        "src": "814:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                          "typeString": "bytes4[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 39,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "863:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 38,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "850:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes4[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 36,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "854:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 37,
                        "nodeType": "ArrayTypeName",
                        "src": "854:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                          "typeString": "bytes4[]"
                        }
                      }
                    },
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "850:15:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                      "typeString": "bytes4[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "814:51:0"
                },
                {
                  "expression": {
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 42,
                        "name": "functionSelectors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "875:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 44,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "893:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "875:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 45,
                          "name": "IDiamondCut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 422,
                          "src": "898:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDiamondCut_$422_$",
                            "typeString": "type(contract IDiamondCut)"
                          }
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "diamondCut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 411,
                        "src": "898:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_declaration_nonpayable$_t_array$_t_struct$_FacetCut_$399_calldata_ptr_$dyn_calldata_ptr_$_t_address_$_t_bytes_calldata_ptr_$returns$__$",
                          "typeString": "function IDiamondCut.diamondCut(struct IDiamondCut.FacetCut calldata[] calldata,address,bytes calldata)"
                        }
                      },
                      "id": 47,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "898:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "875:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "875:54:0"
                },
                {
                  "expression": {
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50,
                        "name": "cut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "939:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$399_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamondCut.FacetCut memory[] memory"
                        }
                      },
                      "id": 52,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "943:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "939:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$399_memory_ptr",
                        "typeString": "struct IDiamondCut.FacetCut memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 55,
                          "name": "_diamondCutFacet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "997:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "expression": {
                              "id": 56,
                              "name": "IDiamondCut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 422,
                              "src": "1035:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDiamondCut_$422_$",
                                "typeString": "type(contract IDiamondCut)"
                              }
                            },
                            "id": 57,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "FacetCutAction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 390,
                            "src": "1035:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_FacetCutAction_$390_$",
                              "typeString": "type(enum IDiamondCut.FacetCutAction)"
                            }
                          },
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 387,
                          "src": "1035:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_FacetCutAction_$390",
                            "typeString": "enum IDiamondCut.FacetCutAction"
                          }
                        },
                        {
                          "id": 59,
                          "name": "functionSelectors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "1098:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_enum$_FacetCutAction_$390",
                            "typeString": "enum IDiamondCut.FacetCutAction"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          }
                        ],
                        "expression": {
                          "id": 53,
                          "name": "IDiamondCut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 422,
                          "src": "948:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDiamondCut_$422_$",
                            "typeString": "type(contract IDiamondCut)"
                          }
                        },
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "FacetCut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 399,
                        "src": "948:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_FacetCut_$399_storage_ptr_$",
                          "typeString": "type(struct IDiamondCut.FacetCut storage pointer)"
                        }
                      },
                      "id": 60,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "facetAddress",
                        "action",
                        "functionSelectors"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "948:178:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$399_memory_ptr",
                        "typeString": "struct IDiamondCut.FacetCut memory"
                      }
                    },
                    "src": "939:187:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FacetCut_$399_memory_ptr",
                      "typeString": "struct IDiamondCut.FacetCut memory"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "939:187:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66,
                        "name": "cut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "1158:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$399_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamondCut.FacetCut memory[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 69,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1171:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 68,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1163:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 67,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1163:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1163:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1175:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$399_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamondCut.FacetCut memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 63,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1363,
                        "src": "1136:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1363_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "diamondCut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 756,
                      "src": "1136:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_FacetCut_$399_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct IDiamondCut.FacetCut memory[] memory,address,bytes memory)"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1136:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "1136:42:0"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "_contractOwner",
                  "nameLocation": "552:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "544:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "544:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9,
                  "mutability": "mutable",
                  "name": "_diamondCutFacet",
                  "nameLocation": "576:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "568:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "568:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "543:50:0"
            },
            "returnParameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "602:0:0"
            },
            "scope": 124,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 111,
            "nodeType": "FunctionDefinition",
            "src": "1311:1123:0",
            "body": {
              "id": 110,
              "nodeType": "Block",
              "src": "1339:1095:0",
              "statements": [
                {
                  "assignments": [
                    82
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 82,
                      "mutability": "mutable",
                      "name": "ds",
                      "nameLocation": "1383:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 110,
                      "src": "1349:36:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DiamondStorage_$571_storage_ptr",
                        "typeString": "struct LibDiamond.DiamondStorage"
                      },
                      "typeName": {
                        "id": 81,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 80,
                          "name": "LibDiamond.DiamondStorage",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 571,
                          "src": "1349:25:0"
                        },
                        "referencedDeclaration": 571,
                        "src": "1349:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$571_storage_ptr",
                          "typeString": "struct LibDiamond.DiamondStorage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1349:36:0"
                },
                {
                  "assignments": [
                    85
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85,
                      "mutability": "mutable",
                      "name": "position",
                      "nameLocation": "1403:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 110,
                      "src": "1395:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 84,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1395:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88,
                  "initialValue": {
                    "expression": {
                      "id": 86,
                      "name": "LibDiamond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1363,
                      "src": "1414:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1363_$",
                        "typeString": "type(library LibDiamond)"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "DIAMOND_STORAGE_POSITION",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 540,
                    "src": "1414:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1395:54:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1499:43:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1513:19:0",
                        "value": {
                          "name": "position",
                          "nodeType": "YulIdentifier",
                          "src": "1524:8:0"
                        },
                        "variableNames": [
                          {
                            "name": "ds.slot",
                            "nodeType": "YulIdentifier",
                            "src": "1513:7:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 82,
                      "isOffset": false,
                      "isSlot": true,
                      "src": "1513:7:0",
                      "suffix": "slot",
                      "valueSize": 1
                    },
                    {
                      "declaration": 85,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1524:8:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 89,
                  "nodeType": "InlineAssembly",
                  "src": "1490:52:0"
                },
                {
                  "assignments": [
                    91
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91,
                      "mutability": "mutable",
                      "name": "facet",
                      "nameLocation": "1603:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 110,
                      "src": "1595:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 90,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1595:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "expression": {
                          "id": 92,
                          "name": "ds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82,
                          "src": "1611:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DiamondStorage_$571_storage_ptr",
                            "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                          }
                        },
                        "id": 93,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selectorToFacetAndPosition",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 556,
                        "src": "1611:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$545_storage_$",
                          "typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"
                        }
                      },
                      "id": 96,
                      "indexExpression": {
                        "expression": {
                          "id": 94,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1641:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sig",
                        "nodeType": "MemberAccess",
                        "src": "1641:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1611:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetAddressAndPosition_$545_storage",
                        "typeString": "struct LibDiamond.FacetAddressAndPosition storage ref"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "facetAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 542,
                    "src": "1611:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1595:67:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 100,
                          "name": "facet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91,
                          "src": "1680:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1697:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1689:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 101,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1689:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1689:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1680:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374",
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1701:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e6486aeb9db70da259b7171a739046119facaec2d8a6bd46f1145fe8391014a",
                          "typeString": "literal_string \"Diamond: Function does not exist\""
                        },
                        "value": "Diamond: Function does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e6486aeb9db70da259b7171a739046119facaec2d8a6bd46f1145fe8391014a",
                          "typeString": "literal_string \"Diamond: Function does not exist\""
                        }
                      ],
                      "id": 99,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1672:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1672:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "1672:64:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1844:584:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1927:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1930:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1933:12:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1933:14:0"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "1914:12:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1914:34:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1914:34:0"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2014:65:0",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "2041:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2041:5:0"
                            },
                            {
                              "name": "facet",
                              "nodeType": "YulIdentifier",
                              "src": "2048:5:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2055:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "2058:12:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2058:14:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2074:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2077:1:0",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "2028:12:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2028:51:0"
                        },
                        "variables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "2018:6:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2143:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2146:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "2149:14:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2149:16:0"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "2128:14:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2128:38:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2128:38:0"
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2279:59:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2304:1:0",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "2307:14:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2307:16:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "2297:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2297:27:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2297:27:0"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "2272:66:0",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2277:1:0",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2359:59:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2384:1:0",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "2387:14:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2387:16:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "return",
                                      "nodeType": "YulIdentifier",
                                      "src": "2377:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2377:27:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2377:27:0"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "2351:67:0",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "name": "result",
                          "nodeType": "YulIdentifier",
                          "src": "2253:6:0"
                        },
                        "nodeType": "YulSwitch",
                        "src": "2246:172:0"
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 91,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2048:5:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 109,
                  "nodeType": "InlineAssembly",
                  "src": "1835:593:0"
                }
              ]
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1319:2:0"
            },
            "returnParameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1339:0:0"
            },
            "scope": 124,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 119,
            "nodeType": "FunctionDefinition",
            "src": "2473:124:0",
            "body": {
              "id": 118,
              "nodeType": "Block",
              "src": "2528:69:0",
              "statements": [
                {
                  "expression": {
                    "hexValue": "5448495320495320414e204558414d504c45204f4620414e20494d4d555441424c452046554e4354494f4e",
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2545:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d03ba27334e17b0439d1817a30f88648a4a5c6eb0aae11d939202b448009f65a",
                      "typeString": "literal_string \"THIS IS AN EXAMPLE OF AN IMMUTABLE FUNCTION\""
                    },
                    "value": "THIS IS AN EXAMPLE OF AN IMMUTABLE FUNCTION"
                  },
                  "functionReturnParameters": 115,
                  "id": 117,
                  "nodeType": "Return",
                  "src": "2538:52:0"
                }
              ]
            },
            "functionSelector": "54353f2f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "example",
            "nameLocation": "2482:7:0",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2489:2:0"
            },
            "returnParameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "2513:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2513:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2512:15:0"
            },
            "scope": 124,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 123,
            "nodeType": "FunctionDefinition",
            "src": "2603:29:0",
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "2630:2:0",
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2610:2:0"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2630:0:0"
            },
            "scope": 124,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Diamond",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          124
        ],
        "name": "Diamond",
        "nameLocation": "518:7:0",
        "scope": 125,
        "usedErrors": [
          503,
          507,
          509,
          513,
          517,
          519,
          521,
          525,
          529,
          531,
          533,
          535
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 0
}